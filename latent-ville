#!/usr/bin/env raku

use Terminal::UI 'ui';
use Data::Dump;

my $up = <
  0x030d 0x030e 0x0304 0x0305
  0x033f 0x0311 0x0306 0x0310
  0x0352 0x0357 0x0351 0x0307
  0x0308 0x030a 0x0342 0x0343
  0x0344 0x034a 0x034b 0x034c
  0x0303 0x0302 0x030c 0x0350
  0x0300 0x0301 0x030b 0x030f
  0x0312 0x0313 0x0314 0x033d
  0x0309 0x0363 0x0364 0x0365
  0x0366 0x0367 0x0368 0x0369
  0x036a 0x036b 0x036c 0x036d
  0x036e 0x036f 0x033e 0x035b
  0x0346 0x031a >;

my $mid = <
  0x0315 0x031b 0x0340 0x0341
  0x0358 0x0321 0x0322 0x0327
  0x0328 0x0334 0x0335 0x0336
  0x034f 0x035c 0x035d 0x035e
  0x035f 0x0360 0x0362 0x0338
  0x0337 0x0361 0x0489 >;

my $down = <
  0x0316 0x0317 0x0318 0x0319
  0x031c 0x031d 0x031e 0x031f
  0x0320 0x0324 0x0325 0x0326
  0x0329 0x032a 0x032b 0x032c
  0x032d 0x032e 0x032f 0x0330
  0x0331 0x0332 0x0333 0x0339
  0x033a 0x033b 0x033c 0x0345
  0x0347 0x0348 0x0349 0x034d
  0x034e 0x0353 0x0354 0x0355
  0x0356 0x0359 0x035a 0x0323 >;

my $in-between = ' ';

sub normal(\m, \σ) { (sqrt -2 * log rand) * cos(τ * rand) * σ + m; }

my @style =
  < l  ʃ  ₗ 𝙡  L  ⓛ   1  λ  ⎣  |            >,
  < a  ɐ  ₐ 𝙖  A  ⓐ   4  α  ∆  ª            >,
  < t  ʇ  ₜ 𝙩  T  ⓣ   +  τ  ⏉  †  ✝︎  ⧷      >,
  < e  ǝ  ₑ 𝙚  E  ⓔ   3  ε  ∑  ⌯  ∊         >,
  < n  u  ₙ 𝙣  N  ⓝ   ⁿ  ν  ↯  ͷ            >,
  < t  ʇ  ₜ 𝙩  T  ⓣ   +  τ  ⏉  †  ✝︎  ⧷      >,
  < ⚈  ⦿  . •  ●  ☉   ∎  *  ⧳  ⚙︎  ○  ⊙ ⏣ ☀︎  >,
  < v  ʌ  ᵥ 𝙫  V  ⓥ   ν  ∨  ⩔               >,
  < i  !  ᵢ 𝙞  I  ⓘ   |  ι  ⇡  ¡  ⁱ  ⫯      >,
  < l  ʃ  ₗ 𝙡  L  ⓛ   1  λ  ⎣  |            >,
  < l  ʃ  ₗ 𝙡  L  ⓛ   1  λ  ⎣  |            >,
  < e  ǝ  ₑ 𝙚  E  ⓔ   3  ε  ∑  ⌯  ∊         >,
  ;

my $N = @style.elems;

my $cursor = 0;
my @style-cursor = 0 xx $N;
my @thing = {char => "", up => [], mid => [], down => []} xx $N;
for ^@style.elems -> \i { @thing[i]<char> = @style[i][0]; }
my $last = "";

ui.setup(:1panes);

srand 0;

loop {
#my $content = [~] gather for @thing {
#  take (.<char>, |.<up>, |.<mid>, |.<down>).join
#};

  my $content = @thing.map({
    (.<char>, |.<up>, |.<mid>, |.<down>).join
  }).join($in-between);

  ui.panes[0].splash($content);
  ui.panes[0].put($last);

  given ui.get-key {
    when /q/ { last }
    
    when ' ' | any < - . _ / \ > { $in-between = $_ }
    when /Delete/ { $in-between = '' }
    
    when /Up/ {
      @style-cursor[$cursor]++;
      my $n = @style[$cursor].elems;
      @style-cursor[$cursor] = $n - 1 if @style-cursor[$cursor] >= $n;
      @thing[$cursor]<char> = @style[$cursor][@style-cursor[$cursor]];
    }
    
    when /Down/ { 
      @style-cursor[$cursor]--;
      @style-cursor[$cursor] = 0 if @style-cursor[$cursor] < 0;
      @thing[$cursor]<char> = @style[$cursor][@style-cursor[$cursor]];
    }

    when /Left/ {
      $cursor--;
      $cursor = $N - 1 if $cursor < 0;
    }
    
    when /Right/ {
      $cursor++;
      $cursor = 0 if $cursor >= $N;
    }
    
    when /u/ { @thing[$cursor]<up>.push($up.pick.chr) }
    when /U/ {
      @thing[$cursor]<up>.pop
        unless @thing[$cursor]<up>.elems == 0
    }

    when /d/ { @thing[$cursor]<down>.push($down.pick.chr) }
    when /D/ {
      @thing[$cursor]<down>.pop
      	unless @thing[$cursor]<down>.elems == 0
    }

    when /m/ { @thing[$cursor]<mid>.push($mid.pick.chr) }
    when /M/ {
      @thing[$cursor]<mid>.pop
      	unless @thing[$cursor]<mid>.elems == 0
    }

    when /c/ {
      @style-cursor = 0 xx $N;
      @thing = {char => "", up => [], mid => [], down => []} xx $N;
      for ^@style.elems -> \i { @thing[i]<char> = @style[i][0]; }
    }

    default {
      $last = $_
    }
  }
}

ui.shutdown 
